# Copyright (C) 2024 Telicent Limited
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: federator-server
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: federator-server
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app.kubernetes.io/name: federator-server
        app.kubernetes.io/version: "0.4.1"
    spec:
      serviceAccountName: federator-server
      containers:
        - name: federator-server
          image: telicent/telicent-federation-server:0.4.1
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: federator-server-config.env
          ports:
            - containerPort: 8080
              protocol: TCP
              name: grpc
          resources:
            requests:
              memory: 1024Mi
              cpu: 500m
            limits:
              memory: 1024Mi
              cpu: 500m
          volumeMounts:
            - name: config-volume
              mountPath: /config
            - name: access-map-volume
              mountPath: /access-map
      volumes:
        - name: config-volume
          configMap:
            name: federator-server-properties
        - name: access-map-volume
          secret:
            secretName: federator-server-access-map
          # readinessProbe:
          #   httpGet:
          #     path: /access/health
          #     port: 8080
          #     scheme: HTTP
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          #   timeoutSeconds: 2
          # livenessProbe:
          #   httpGet:
          #     path: /access/health
          #     port: 8080
          #     scheme: HTTP
          #   initialDelaySeconds: 60
          #   periodSeconds: 30
          #   timeoutSeconds: 2
